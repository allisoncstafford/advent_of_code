from day10_pt1 import best, create_astroids, Astroid

def test1():
    code = [['.','#','.','.','#'], ['.','.','.','.','.'], ['#','#','#','#','#'],
            ['.','.','.','.','#'], ['.','.','.','#','#']]
    assert best(code) == [{'x':3, 'y':4, 'n':8}]


def test_create_astroids1():
    code = [['.','#','.','.','#']]
    astroids = create_astroids(code)
    xys = [(a.x, a.y) for a in astroids]
    assert xys == [(1,0), (4,0)]

def test_create_astroids2():
    code = [['.','#','.','.','#'], ['.','.','.','.','.'], ['#','#','#','#','#'],
    ['.','.','.','.','#'], ['.','.','.','#','#']]
    astroids = create_astroids(code)
    xys = [(a.x, a.y) for a in astroids]
    assert set(xys) == set([(1,0), (4,0), (0,2), (1,2), (2,2), (3,2), (4,2),
                           (4,3), (3,4), (4,4)])

def test_set_n_detects():
    code = [['.','#','.','.','#'], ['.','.','.','.','.'], ['#','#','#','#','#'],
            ['.','.','.','.','#'], ['.','.','.','#','#']]
    astroids = create_astroids(code)
    astroids[0].set_n_detects(astroids)
    assert astroids[0].n_detects == 7

def test_set_n_detects2():
    code = ['......#.#.', '#..#.#....', '..#######.', '.#.#.###..', 
            '.#..#.....', '..#....#.#', '#..#....#.', '.##.#..###', 
            '##...#..#.', '.#....####']
    astroids = create_astroids(code)
    astroids[33].set_n_detects(astroids)
    assert astroids[33].n_detects == 33

def test2():
    code = ['......#.#.', '#..#.#....', '..#######.', '.#.#.###..', 
            '.#..#.....', '..#....#.#', '#..#....#.', '.##.#..###', 
            '##...#..#.', '.#....####']
    assert best(code) == [{'x':5, 'y':8, 'n':33}]


def test3():
    code = ['#.#...#.#.', '.###....#.', '.#....#...', '##.#.#.#.#',
            '....#.#.#.', '.##..###.#', '..#...##..', '..##....##', 
            '......#...', '.####.###.']
    assert best(code) == [{'x':1, 'y':2, 'n':35}]

def test4():
    code = ['.#..#..###', '####.###.#', '....###.#.', '..###.##.#', 
         '##.##.#.#.', '....###..#', '..#.#..#.#', '#..#.#.###', 
         '.##...##.#', '.....#.#..']
    assert best(code) == [{'x':6, 'y':3, 'n':41}]

def test5():
    code = ['.#..##.###...#######', '##.############..##.', 
            '.#.######.########.#', '.###.#######.####.#.', 
            '#####.##.#.##.###.##', '..#####..#.#########', 
            '####################', '#.####....###.#.#.##', 
            '##.#################', '#####.##.###..####..',
            '..######..##.#######', '####.##.####...##..#',
            '.#####..#.######.###', '##...#.##########...',
            '#.##########.#######', '.####.#.###.###.#.##',
            '....##.##.###..#####', '.#.#.###########.###', 
            '#.#.#.#####.####.###', '###.##.####.##.#..##']
    assert best(code) == [{'x':11, 'y':13, 'n':210}]


    